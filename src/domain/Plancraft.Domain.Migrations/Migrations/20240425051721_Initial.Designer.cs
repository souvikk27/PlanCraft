// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plancraft.Domain.Migrations;

#nullable disable

namespace Plancraft.Domain.Migrations.Migrations
{
    [DbContext(typeof(MigrationContext))]
    [Migration("20240425051721_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContractDocument", b =>
                {
                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ContractID");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DocumentID");

                    b.HasKey("ContractId", "DocumentId")
                        .HasName("PK__Contract__28A6DAFF4527FBC5");

                    b.HasIndex("DocumentId");

                    b.ToTable("ContractDocuments", (string)null);
                });

            modelBuilder.Entity("ContractModality", b =>
                {
                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ContractID");

                    b.Property<Guid>("ModalityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModalityID");

                    b.HasKey("ContractId", "ModalityId")
                        .HasName("PK__Contract__651AA048930E7BD1");

                    b.HasIndex("ModalityId");

                    b.ToTable("ContractModalities", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Plancraft.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Contract", b =>
                {
                    b.Property<Guid>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ContractID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("GeneralInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ContractId")
                        .HasName("PK__Contract__C90D3409DA4AF841");

                    b.HasIndex("ProjectId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.ContractItem", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("ContractId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ContractID");

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PaymentSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("QuantityOrBudget")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ItemId")
                        .HasName("PK__Contract__727E83EB489862DB");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractItems");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Document", b =>
                {
                    b.Property<Guid>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DocumentID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.HasKey("DocumentId")
                        .HasName("PK__Document__1ABEEF6FA75931B4");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.FinancialTransaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TransactionID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ContractItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ContractItemID");

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<Guid?>("FunderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FunderID");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TransactionId")
                        .HasName("PK__Financia__55433A4B72677581");

                    b.HasIndex("ContractItemId");

                    b.HasIndex("FunderId");

                    b.ToTable("FinancialTransactions");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Funder", b =>
                {
                    b.Property<Guid>("FunderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FunderID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ContactInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FunderId")
                        .HasName("PK__Funders__B752D7C1D2EF142D");

                    b.ToTable("Funders");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Group", b =>
                {
                    b.Property<Guid>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GroupID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GroupId")
                        .HasName("PK__Groups__149AF30ACDCA3E6E");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Notification", b =>
                {
                    b.Property<Guid>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NotificationID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ScheduledDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E32CB169C23");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.PaymentModality", b =>
                {
                    b.Property<Guid>("ModalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModalityID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModalityId")
                        .HasName("PK__PaymentM__C179441B11C5A650");

                    b.ToTable("PaymentModalities");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProjectId")
                        .HasName("PK__Projects__761ABED0F44558C0");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Setting", b =>
                {
                    b.Property<Guid>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SettingID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SettingId")
                        .HasName("PK__Settings__54372AFDBD7CE998");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.VwContractDocument", b =>
                {
                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ContractID");

                    b.Property<string>("DocumentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DocumentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DocumentID");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("GeneralInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_ContractDocuments", (string)null);
                });

            modelBuilder.Entity("Plancraft.Domain.Models.VwDocumentProjectsContract", b =>
                {
                    b.Property<DateOnly?>("ContractEndDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractGeneralInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ContractId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ContractID");

                    b.Property<string>("ContractName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("ContractStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ContractValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("DocumentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DocumentID");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DocumentUploadDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DocumentVersion")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProjectBudget")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("ProjectEndDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("ProjectStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ProjectStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_DocumentProjectsContracts", (string)null);
                });

            modelBuilder.Entity("Plancraft.Domain.Models.VwFinancialTransactionDetail", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ContactInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<Guid?>("FunderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FunderID");

                    b.Property<string>("FunderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FunderType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID");

                    b.Property<string>("ItemName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("TransactionDate")
                        .HasColumnType("date");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TransactionID");

                    b.ToTable((string)null);

                    b.ToView("vw_FinancialTransactionDetails", (string)null);
                });

            modelBuilder.Entity("Plancraft.Domain.Models.VwFunderProjectsTransaction", b =>
                {
                    b.Property<string>("ContactInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<Guid>("FunderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FunderID");

                    b.Property<string>("FunderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FunderType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID");

                    b.Property<string>("ItemName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ProjectBudget")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("ProjectEndDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("ProjectStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ProjectStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("TransactionDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TransactionID");

                    b.ToTable((string)null);

                    b.ToView("vw_FunderProjectsTransactions", (string)null);
                });

            modelBuilder.Entity("Plancraft.Domain.Models.VwProjectContractsItem", b =>
                {
                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("ContractEndDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractGeneralInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ContractId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ContractID");

                    b.Property<string>("ContractName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("ContractStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ContractValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ItemCurrency")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID");

                    b.Property<string>("ItemName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ItemPaymentSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ItemQuantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ItemUnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_ProjectContractsItems", (string)null);
                });

            modelBuilder.Entity("Plancraft.Domain.Models.VwProjectFunder", b =>
                {
                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ContactInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("FunderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FunderID");

                    b.Property<string>("FunderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FunderType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_ProjectFunders", (string)null);
                });

            modelBuilder.Entity("ProjectDocument", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DocumentID");

                    b.HasKey("ProjectId", "DocumentId")
                        .HasName("PK__ProjectD__97B1502638C0F9CE");

                    b.HasIndex("DocumentId");

                    b.ToTable("ProjectDocuments", (string)null);
                });

            modelBuilder.Entity("ProjectFunder", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.Property<Guid>("FunderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FunderID");

                    b.HasKey("ProjectId", "FunderId")
                        .HasName("PK__ProjectF__7D6F93AC0C5E4FA3");

                    b.HasIndex("FunderId");

                    b.ToTable("ProjectFunders", (string)null);
                });

            modelBuilder.Entity("UserGroupMapping", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GroupID");

                    b.HasKey("UserId", "GroupId")
                        .HasName("PK__UserGroups__A6C1639C94EA34FE");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroupMapping", (string)null);
                });

            modelBuilder.Entity("UserProjects", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectID");

                    b.HasKey("UserId", "ProjectId")
                        .HasName("PK__UserProj__A6C1639C94EA34FE");

                    b.HasIndex("ProjectId");

                    b.ToTable("UserProjects", (string)null);
                });

            modelBuilder.Entity("ContractDocument", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.Contract", null)
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .IsRequired()
                        .HasConstraintName("FK__ContractD__Contr__5535A963");

                    b.HasOne("Plancraft.Domain.Models.Document", null)
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .IsRequired()
                        .HasConstraintName("FK__ContractD__Docum__5629CD9C");
                });

            modelBuilder.Entity("ContractModality", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.Contract", null)
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .IsRequired()
                        .HasConstraintName("FK__ContractM__Contr__59063A47");

                    b.HasOne("Plancraft.Domain.Models.PaymentModality", null)
                        .WithMany()
                        .HasForeignKey("ModalityId")
                        .IsRequired()
                        .HasConstraintName("FK__ContractM__Modal__59FA5E80");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plancraft.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Contract", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.Project", "Project")
                        .WithMany("Contracts")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK__Contracts__Proje__3D5E1FD2");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.ContractItem", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.Contract", "Contract")
                        .WithMany("ContractItems")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK__ContractI__Contr__412EB0B6");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.FinancialTransaction", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.ContractItem", "ContractItem")
                        .WithMany("FinancialTransactions")
                        .HasForeignKey("ContractItemId")
                        .HasConstraintName("FK__Financial__Contr__4D94879B");

                    b.HasOne("Plancraft.Domain.Models.Funder", "Funder")
                        .WithMany("FinancialTransactions")
                        .HasForeignKey("FunderId")
                        .HasConstraintName("FK__Financial__Funde__4E88ABD4");

                    b.Navigation("ContractItem");

                    b.Navigation("Funder");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Notification", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.ApplicationUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__UserI__6383C8BA");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectDocument", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.Document", null)
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .IsRequired()
                        .HasConstraintName("FK__ProjectDo__Docum__52593CB8");

                    b.HasOne("Plancraft.Domain.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__ProjectDo__Proje__5165187F");
                });

            modelBuilder.Entity("ProjectFunder", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.Funder", null)
                        .WithMany()
                        .HasForeignKey("FunderId")
                        .IsRequired()
                        .HasConstraintName("FK__ProjectFu__Funde__7B5B524B");

                    b.HasOne("Plancraft.Domain.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__ProjectFu__Proje__7A672E12");
                });

            modelBuilder.Entity("UserGroupMapping", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__UserGroup__Group__6754599E");

                    b.HasOne("Plancraft.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserGroup__UserI__66603565");
                });

            modelBuilder.Entity("UserProjects", b =>
                {
                    b.HasOne("Plancraft.Domain.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__UserProje__Proje__5CD6CB2B");

                    b.HasOne("Plancraft.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserProje__UserI__5EDF0CAE");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.ApplicationUser", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Contract", b =>
                {
                    b.Navigation("ContractItems");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.ContractItem", b =>
                {
                    b.Navigation("FinancialTransactions");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Funder", b =>
                {
                    b.Navigation("FinancialTransactions");
                });

            modelBuilder.Entity("Plancraft.Domain.Models.Project", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
